// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer/core'
import * as Local from 'contentlayer/source-files'

export { isType } from 'contentlayer/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type Blog = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Blog'
  title: string
  publishedAt: IsoDateTimeString
  summary: string
  image?: string | undefined
  category?: string | undefined
  author?: string | undefined
  /** MDX file body */
  body: MDX
  slug: string
  slugAsParams: string
  structuredData: object
}

export type Editorial = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Editorial'
  title: string
  publishedAt: IsoDateTimeString
  summary: string
  image?: string | undefined
  category?: string | undefined
  author?: string | undefined
  /** MDX file body */
  body: MDX
  slug: string
  slugAsParams: string
  structuredData: object
}

export type Quiz = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Quiz'
  title: string
  publishedAt: IsoDateTimeString
  summary: string
  image?: string | undefined
  category?: string | undefined
  author?: string | undefined
  /** MDX file body */
  body: MDX
  slug: string
  slugAsParams: string
  structuredData: object
}

export type Review = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Review'
  title: string
  publishedAt: IsoDateTimeString
  summary: string
  image?: string | undefined
  category?: string | undefined
  author?: string | undefined
  /** MDX file body */
  body: MDX
  slug: string
  slugAsParams: string
  structuredData: object
}  

/** Nested types */
  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Blog | Editorial | Quiz | Review
export type DocumentTypeNames = 'Blog' | 'Editorial' | 'Quiz' | 'Review'

export type NestedTypes = never
export type NestedTypeNames = never

export type DataExports = {
  allDocuments: DocumentTypes[]
  allBlogs: Blog[]
  allEditorials: Editorial[]
  allReviews: Review[]
  allQuizzes: Quiz[]
}


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
  dataExports: DataExports
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Blog: Blog
  Editorial: Editorial
  Quiz: Quiz
  Review: Review
}

export type NestedTypeMap = {

}

 